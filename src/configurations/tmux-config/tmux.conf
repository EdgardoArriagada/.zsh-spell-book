# Chage C-b for C-f
unbind C-b
set-option -g prefix C-f
bind-key C-f send-prefix

# Open new panes and windows in curren working dir
bind-key '"' split-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"

# Send pane to selected window
bind-key T command-prompt -p "Send pane to:" "join-pane -t '%1' ; select-window -t '%1'"
# Choose a pane to join with current one
bind-key < split-window -h \; choose-window 'kill-pane ; join-pane -hs %%'
# Swap current window with the lowest-numbered window
bind-key g swap-window -t:^\; select-window -t:1
# Join current pane with the lowest-numbered window panes
bind-key G join-pane -t:^\; select-window -t:^
# Swap current window with the next
bind-key J swap-window -t -1\; select-window -t -1
# Swap current window with the previous
bind-key K swap-window -t +1\; select-window -t +1
# Select lowest numbered window
bind-key 0 select-window -t:^
# Select highest numbered window
bind-key 9 select-window -t:$

# Switch Windows With Alt + Num
bind-key -n M-0 select-window -t:^
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t:$

# Switch windows like tabs in chrome
bind-key -n C-Pageup next-window
bind-key -n C-Pagedown previous-window

# Enable vim mode
set-window-option -g mode-keys vi

# Copy to user clipboard when on vim mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
unbind -T copy-mode-vi MouseDragEnd1Pane

# Vim-like pane switching
bind-key -r k select-pane -U
bind-key -r j select-pane -D
bind-key -r h select-pane -L
bind-key -r l select-pane -R

### On window closed ###
# Renumber windows
set -g renumber-windows on

# Miscellaneous
set -g base-index 1 # start windows at 1, not 0
set -g history-limit 15000
set -g mouse on
set -g default-terminal "screen-256color"
bind-key r source-file ~/.tmux.conf \; display " Reloaded!"

##################### THEME ########################

# Pane border
set -g pane-border-style fg='white'
set -g pane-active-border-style fg='yellow'
# Message text
set -g message-style bg='#999999',fg='#111111'
# Status line
set -g status-style bg='#141414',fg='green'
set -g status-interval 1
# Status left
# Are we controlling tmux or the content of the panes?
set -g status-left '#[bg=#999999]#[fg=#111111]#{?client_prefix,#[bg=yellow],} ✠ '
# Are we zoomed into a pane?
set -ga status-left '#[bg=#141414]#[fg=#ff79c6] #{?window_zoomed_flag, ❨ᛄ❩  ,   }'
# Window status
set-window-option -g window-status-style fg='#999999',bg=default
set-window-option -g window-status-current-style fg='#ff79c6',bg='#282a37'
set -g window-status-current-format "#[fg=#141414]#[bg=#999999]#[fg=#111111]#[bg=#999999] #I #W #[fg=#999999]#[bg=#141414]"
# Status right
set -g status-right-length 200
set -g status-right '#[fg=#999999,bg=#141414]⦑#[fg=#999999,bg=#141414] ↑#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") '
set -ga status-right '#[fg=#999999,bg=#141414]⦑#[fg=#999999,bg=#141414] %a-%d-%b '
set -ga status-right '#[fg=#999999,bg=#141414]⦑#[fg=#999999,bg=#141414] %H:%M:%S '
set -ga status-right '#[fg=#999999,bg=#141414]⦑#[fg=#999999,bg=#141414] #S '
