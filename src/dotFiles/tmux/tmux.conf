# Chage C-b for C-f
unbind C-b
set-option -g prefix C-f
bind C-f send-prefix

# reduce escape time (default is 500ms)
set-option -sg escape-time 10

# Open new panes and windows in curren working dir
bind '"' split-window -c "#{pane_current_path}"
bind -n M-i split-window -c "#{pane_current_path}"

bind % split-window -h -c "#{pane_current_path}"
bind -n M-s split-window -h -c "#{pane_current_path}"

bind c new-window -c "#{pane_current_path}"
bind -n M-c new-window -c "#{pane_current_path}"

# Send pane to selected window
bind T command-prompt -p "Send pane to:" "join-pane -t '%1' ; select-window -t '%1'"
# Choose a pane to join with current one
bind < split-window -h \; choose-window 'kill-pane ; join-pane -hs %%'
# Swap current window with the lowest-numbered window
bind g swap-window -t:^\; select-window -t:1
# Join current pane with the lowest-numbered window panes
bind G join-pane -t:^\; select-window -t:^
# Swap current window with the next
bind J swap-window -t -1\; select-window -t -1
# Swap current window with the previous
bind K swap-window -t +1\; select-window -t +1
# Select lowest numbered window
bind 0 select-window -t:^
# Select highest numbered window
bind 9 select-window -t:$

# Switch Windows With Alt + Num
bind -n M-0 select-window -t:^
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t:$

# Switch windows like tabs in chrome
bind -n C-Pageup next-window
bind -n C-Pagedown previous-window

# skip prefixes
bind -n M-n next-window
bind -n M-p previous-window
bind -n M-z resize-pane -Z

# make ] copy mode like [
bind ] copy-mode

# Enable vim mode
set-window-option -g mode-keys vi

# http://man.openbsd.org/OpenBSD-current/man1/tmux.1#Command
# Copy to user clipboard when on vim mode
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi V send -X select-line
bind -T copy-mode-vi y send -X copy-selection
bind -T copy-mode-vi Y send -X copy-end-of-line
bind -T copy-mode-vi C send -X stop-selection
bind -T copy-mode-vi c send -X clear-selection
bind -T copy-mode-vi m send -X set-mark
bind -T copy-mode-vi "'" send -X jump-to-mark
bind -T copy-mode-vi 'C-v' send -X begin-selection \; send -X rectangle-toggle

unbind -T copy-mode-vi MouseDragEnd1Pane

# Vim-like pane switching
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R

bind -n M-k select-pane -U
bind -n M-j select-pane -D
bind -n M-h select-pane -L
bind -n M-l select-pane -R

# Vim-like search
bind / copy-mode \; command-prompt -ip "/" "send -X search-forward-incremental \"%%%\""

### On window closed ###
# Renumber windows
set -g renumber-windows on

# Miscellaneous
set -g base-index 1 # start windows at 1, not 0
set -g history-limit 6000
set -g mouse on
set -g default-terminal "screen-256color"
bind r source-file ~/.tmux.conf \; display " Reloaded!"
set -s command-alias[0] q='kill-window'
bind -n M-o clear-history \; display -d 300 " clear-history"
bind -n M-w send-keys C-d
bind -n M-q display-panes -d 300

# Docker
bind 8 confirm-before -p "Reload this docker-compose? [Y/n]" "send-keys C-c ' docker-compose down; docker-compose up' C-m"

# Popups
bind -n M-t popup -E -h90% -w90% 'btop'
bind -n M-\; popup -E -h90% -w90% 'tmux new-session -c "#{pane_current_path}"'
bind -n M-g popup -E -h90% -w90% 'tmux new-session -c "#{pane_current_path}" "tig" \; rename-window "#{b:pane_current_path}"'
bind m popup -E -h100% -w100% 'unimatrix -ccyan'

##################### THEME ########################
%hidden primaryColour=colour75
%hidden secondaryColour=colour207

%hidden fgColour='#ebdbb2'
%hidden bgColour='#282828'
%hidden bg0Colour='#1d2021'
%hidden paneBorderColour='#928374'
%hidden unfocusedBgColour=colour235

set-hook -g pane-mode-changed "if -F '#{m/r:(copy|view)-mode,#{pane_mode}}' \
\"set -a status-right '#[fg=#{primaryColour},bg=#{bgColour}]#{pane_mode} #{pane_mode} #{pane_mode} #{pane_mode} #{pane_mode} #{pane_mode} #{pane_mode} #{pane_mode} #{pane_mode} #{pane_mode} #{pane_mode} #{pane_mode} #{pane_mode} #{pane_mode} #{pane_mode}\" \
  'set -u status-right'"

# copy-mode-vi
set -g mode-style "fg=#{primaryColour}, bg=#{bg0Colour}"

# Pane border
set -g pane-border-style fg='#{paneBorderColour}'
set -g pane-active-border-style fg='#{primaryColour}'

# Pane Background
set-window-option -g window-style bg='terminal'

# Message text
set -g message-style bg='#{fgColour}',fg='#{bgColour}'

# Status line
set -g status-style bg='#{bgColour}',fg='#{fgColour}'
set -g status-interval 1

# Status left
# Are we controlling tmux or the content of the panes?
set -g status-left '#[bg=#{fgColour}]#[fg=#{bgColour}]#{?client_prefix,#[bg=colour75],} ﱦ '
# Are we zoomed into a pane?
set -ga status-left '#[bg=#{bgColour}]#[fg=#{secondaryColour}] #{?window_zoomed_flag, ❨ᛄ❩  ,   }'

# Tab styles
set-window-option -g window-status-style fg='#{fgColour}',bg='#{bgColour}'

set -g window-status-current-format "#[fg=#{bgColour}]#[bg=#{fgColour}]#[fg=#{bgColour}]#[bg=#{fgColour}] #I #W #[fg=#{fgColour}]#[bg=#{bgColour}]"

# Status right
set -g status-right-length 200
set -g status-right '#[fg=#{fgColour},bg=#{bgColour}]⦑#[fg=#{fgColour},bg=#{bgColour}] #{history_size}/#{history_limit} '
set -ga status-right '#[fg=#{fgColour},bg=#{bgColour}]⦑#[fg=#{fgColour},bg=#{bgColour}] ↑#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") '
set -ga status-right '#[fg=#{fgColour},bg=#{bgColour}]⦑#[fg=#{fgColour},bg=#{bgColour}] %a-%d-%b '
set -ga status-right '#[fg=#{fgColour},bg=#{bgColour}]⦑#[fg=#{fgColour},bg=#{bgColour}] %H:%M:%S '
set -ga status-right '#[fg=#{fgColour},bg=#{bgColour}]⦑#[f=#{fgColour},bg=#{bgColour}] #S '

##################### PLUGINS ########################
set -g @plugin 'schasse/tmux-jump'
set -g @jump-key 'j'

# plugins manager
run -b '~/.tmux/plugins/tpm/tpm'
