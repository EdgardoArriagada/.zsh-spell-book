# Chage C-b for C-f
unbind C-b
set-option -g prefix C-f
bind-key C-f send-prefix

# Open new panes and windows in curren working dir
bind-key '"' split-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"

# Send pane to selected window
bind-key T command-prompt -p "Send pane to:" "join-pane -t '%1' ; select-window -t '%1'"
# Choose a pane to join with current one
bind-key < split-window -h \; choose-window 'kill-pane ; join-pane -hs %%'
# Swap current window with the lowest-numbered window
bind-key g swap-window -t:^\; select-window -t:1
# Join current pane with the lowest-numbered window panes
bind-key G join-pane -t:^\; select-window -t:^
# Swap current window with the next
bind-key J swap-window -t -1\; select-window -t -1
# Swap current window with the previous
bind-key K swap-window -t +1\; select-window -t +1
# Select lowest numbered window
bind-key 0 select-window -t:^
# Select highest numbered window
bind-key 9 select-window -t:$

# Switch Windows With Alt + Num
bind-key -n M-0 select-window -t:^
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t:$

# Switch windows like tabs in chrome
bind-key -n C-Pageup next-window
bind-key -n C-Pagedown previous-window

# Enable vim mode
set-window-option -g mode-keys vi

# Copy to user clipboard when on vim mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
unbind -T copy-mode-vi MouseDragEnd1Pane

# Vim-like pane switching
bind-key k select-pane -U
bind-key j select-pane -D
bind-key h select-pane -L
bind-key l select-pane -R

# Vim-like search
bind-key / copy-mode \; command-prompt -ip "/" "send -X search-forward-incremental \"%%%\""

### On window closed ###
# Renumber windows

# TODO: Report a bug with the next option while
# killing windows within choose-tree
# set -g renumber-windows on
# Workaround
bind-key -n M-n move-window -r

# Miscellaneous
set -g base-index 1 # start windows at 1, not 0
set -g history-limit 6000
set -g mouse on
set -g default-terminal "screen-256color"
bind-key r source-file ~/.tmux.conf \; display " Reloaded!"
set -s command-alias[0] q='kill-window'
bind -n C-k clear-history

# Popups
bind -n M-t popup -E -h90% -w90% 'btop'
bind -n M-p popup -E -h90% -w90% 'tmux new-session -c "#{pane_current_path}"'
bind -n M-g popup -E -h90% -w90% 'tmux new-session -c "#{pane_current_path}" -A -s popup-tig "tig"'
bind -n M-q popup -E -h100% -w100% 'unimatrix -ccyan'

##################### THEME ########################
%hidden primaryColour=colour75
%hidden secondaryColour=colour207

%hidden textColour='#bdae93'
%hidden bgColour='#282828'
%hidden bg0Colour='#1d2021'
%hidden paneBorderColour=colour235
%hidden unfocusedBgColour=colour235

# Scrolling mode
set -g mode-style "fg=#{primaryColour}, bg=#{bg0Colour}"

# Pane border
set -g pane-border-style fg='#{paneBorderColour}'
set -g pane-active-border-style fg='#{primaryColour}'

# Pane Background
set-window-option -g window-active-style bg='terminal'
set-window-option -g window-style bg='#{unfocusedBgColour}'

# Message text
set -g message-style bg='#{textColour}',fg='#{bgColour}'

# Status line
set -g status-style bg='#{bgColour}',fg='green'
set -g status-interval 1

# Status left
# Are we controlling tmux or the content of the panes?
set -g status-left '#[bg=#{textColour}]#[fg=#{bgColour}]#{?client_prefix,#[bg=colour75],} ✠ '
# Are we zoomed into a pane?
set -ga status-left '#[bg=#{bgColour}]#[fg=#{secondaryColour}] #{?window_zoomed_flag, ❨ᛄ❩  ,   }'

# Tab styles
set-window-option -g window-status-style fg='#{textColour}',bg='#{bgColour}'
set -g window-status-current-format "#[fg=#{bgColour}]#[bg=#{textColour}]#[fg=#{bgColour}]#[bg=#{textColour}] #I #W #[fg=#{textColour}]#[bg=#{bgColour}]"

# Status right
set -g status-right-length 200
set -g status-right '#[fg=#{textColour},bg=#{bgColour}]⦑#[fg=#{textColour},bg=#{bgColour}] ↑#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") '
set -ga status-right '#[fg=#{textColour},bg=#{bgColour}]⦑#[fg=#{textColour},bg=#{bgColour}] %a-%d-%b '
set -ga status-right '#[fg=#{textColour},bg=#{bgColour}]⦑#[fg=#{textColour},bg=#{bgColour}] %H:%M:%S '
set -ga status-right '#[fg=#{textColour},bg=#{bgColour}]⦑#[f=#{textColour},bg=#{bgColour}] #S '
